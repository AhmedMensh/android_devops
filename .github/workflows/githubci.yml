name: Android CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: app/build/reports/tests/

  static_analysis:
    name: Static Code Analysis
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Lint Check
        run: ./gradlew lint

      - name: Run Detekt
        run: ./gradlew detekt

      - name: Upload Analysis Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: analysis-results
          path: |
            app/build/reports/lint-results-release.html
            app/build/reports/detekt/

  deploy:
    name: Deploy to Firebase
    needs: [ build, test, static_analysis ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only deploy from main branch
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download APK
        uses: actions/download-artifact@v2
        with:
          name: app-release
          path: app/build/outputs/apk/release/

      - name: Decode Service Account Key
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}" | base64 -d > service-account.json

      - name: Create Release Notes
        run: |
          # Get commit message and author
          git log -1 --pretty=format:"%s%nAuthor: %an <%ae>%n" > release_notes.txt
          
          # Add version information
          VERSION_NAME=$(grep "VERSION_NAME" app/version.properties | cut -d'=' -f2)
          VERSION_CODE=$(grep "VERSION_CODE" app/version.properties | cut -d'=' -f2)
          
          # Add test and analysis results summary
          echo "
          Version: ${VERSION_NAME} (${VERSION_CODE})
          Commit: $(git rev-parse --short HEAD)
          Branch: $(git rev-parse --abbrev-ref HEAD)
          Build Date: $(date)
          
          CI/CD Pipeline Results:
          ✓ Build: Successful
          ✓ Tests: Completed
          ✓ Static Analysis: Completed
          " >> release_notes.txt

      - name: Upload to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/service-account.json
        run: |
          # Install Firebase CLI
          curl -sL https://firebase.tools | bash
          
          # Deploy to Firebase App Distribution
          firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
          --app 1:715489346527:android:b1523bff01e22fe47d3a6a \
          --groups "testers" \
          --release-notes-file release_notes.txt

      - name: Clean up sensitive files
        if: always()
        run: |
          rm -f service-account.json
          rm -f release_notes.txt

      - name: Upload Pipeline Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: pipeline-artifacts
          path: |
            release_notes.txt
            app/build/reports/ 